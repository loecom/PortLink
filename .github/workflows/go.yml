name: Go Cross-Platform Build

on: [push, pull_request]

env:
  GO_VERSION: "1.21"
  OUTPUT_DIR: "dist"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "windows-amd64"
            os: windows
            arch: amd64
            ext: ".exe"
            output_suffix: "windows-x86_64.exe"
          - name: "linux-amd64"
            os: linux
            arch: amd64
            ext: ""
            output_suffix: "linux-x86_64"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Create output directory
        run: mkdir -p "${{ env.OUTPUT_DIR }}"

      - name: Set app name
        id: set-app-name
        run: |
          # 从go.mod获取模块名作为应用名
          APP_NAME=$(grep '^module' go.mod | awk '{print $2}' | awk -F/ '{print $NF}')
          echo "APP_NAME=${APP_NAME}" >> $GITHUB_ENV
          echo "Using app name: ${APP_NAME}"

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: "0"
        run: |
          OUTPUT="${{ env.APP_NAME }}-${{ matrix.output_suffix }}"
          echo "Building ${OUTPUT}"
          
          go build -v -o "${{ env.OUTPUT_DIR }}/${OUTPUT}" .
          
          # 生成校验和
          (cd "${{ env.OUTPUT_DIR }}" && \
           sha256sum "${OUTPUT}" > "${OUTPUT}.sha256")

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            ${{ env.OUTPUT_DIR }}/${{ env.APP_NAME }}-${{ matrix.output_suffix }}
            ${{ env.OUTPUT_DIR }}/${{ env.APP_NAME }}-${{ matrix.output_suffix }}.sha256
          retention-days: 7
