name: Go Cross-Platform Build (x64 & arm64)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  GO_VERSION: "1.23.4"
  PROJECT_NAME: "PortLink"  # 替换为你的项目名
  CGO_ENABLED: "0"  # 禁用CGO以获得更可移植的二进制文件

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            ext: ""
          - os: linux
            arch: arm64
            ext: ""
          - os: windows
            arch: amd64
            ext: ".exe"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Create output directory
        run: mkdir -p release

      - name: Build
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_ENABLED=${{ env.CGO_ENABLED }} \
          go build -v -trimpath -ldflags="-s -w" \
          -o "release/${{ env.PROJECT_NAME }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}" \
          ./...
          
          # 生成校验和
          cd release && \
          sha256sum "${{ env.PROJECT_NAME }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}" \
          > "${{ env.PROJECT_NAME }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}.sha256"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-binaries
          path: release/
          retention-days: 7
